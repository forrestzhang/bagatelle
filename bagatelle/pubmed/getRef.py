from Bio import Entrez
from Bio import Medline
from urllib.error import HTTPError
import datetime
import json
import time

def get_ref_pmid(pmid):

    Entrez.email = "forrestzhang1982@gmail.com"

    attempt = 1

    while attempt <= 3:

        try:

            handle = Entrez.efetch(db="pubmed", rettype="medline", id=pmid, retmode="text")

            break

        except HTTPError as err:

            if 500 <= err.code <= 599:
                print("Received error from server %s" % err)
                print("Attempt %i of 3" % attempt)
                attempt += 1
                time.sleep(15)


    records = Medline.parse(handle)

    return records


def records_to_json(records):

    recordslist = list()

    for record in records:

        recorddict = dict()

        for keynow in record:

            recorddict[keynow] = record[keynow]

        recordslist.append(recorddict)

    recordsjson = json.dumps(recordslist)

    return recordsjson


if __name__ == '__main__':

    # pmids = ['29495000','29300280','29369491','29627093','29055043','29256829','29126343','28436093','28425127','28337760','28337744','27925226','29476246','29464319','29427065','29411094','29396709','29436050','29576089','29576087','29576077','29576076','29576072','29576066','29576065','29453663','29247278','29572653','29502275','29440319','29227940','29223900','29168032','29088409','29476225','28479651','29331724','29487275','29463069','29701313','29530847','29530843','29463543','29698107','29701802','29697985','29694815','29664492','29700475','29700611','29698500','29694025','29683640','29693620','29409330','29696542','29504614','29291862','29291847','29691532','29691977','29630363','29619819','29694241','29695422','29692178','29693297','29696375','29695803','29695866','29695705','29695843','29701028','29620885','29578700','29481059','29694865','29690866','29697740','29637966','29702186','29695095','29695083','29660273','29702261','29695057','29691314','29689107','29689089','29632179','29691670','29686152','29688851','29685102','29686039','29683099','29575988','29690608','29698758','29656648','29518316','29538660','29365172','29300919','29451982','29686055','29684018','29684060','29687350','29686403','29683466','29682876','29680923','29679351','29689495','29681022','29689359','29509070','29691108','29490205','29678154','29685733','29676969','29676837','29684610','29684486','29677134','29525124','29679119','29684657','29676468','29679239','29679176','29567810','29678167','29679360','29675707','29673330','29675815','29649864','29674519','29671906','29684188','29675615','29672913','29671758','29674711','29671830','29672514','29672536','29672525','29675645','29669203','29670011','29613784','29668388','29669823','29669821','29595845','29671148','29671092','29613756','29665021','29665824','29672670','29667059','29667056','29608840','29663477','29628290','29666287','29610314','29673178','29665233','29658061','29659151','29663294','29668980','29660235','29663402','29658844','29660196','29663070','29659633','29662116','29131695','29659522','29452691','29456002','29276952','29272715','29658065','29666552','29287453','29287384','29287362','29287360','29287341','29287317','29422192','29367134','29367131','29367128','28419851','29658119','29658118','29658105','29656603','29202293','29179071','29179066','29665551','29605429','29655242','29661995','29655221','29652522','29652839','29652796','29652225','29674098','29653969','29702444','29654242','29650657','29654500','29642682','29642668','29677657','29679868','29665534','29656249','29648940','29655837','29644433','29657125','29656257','29583011','29656028','29644983','29650967','29650958','29679934','29651780','29651164','29471732','29637429','29576481','29655066','29696032','29641510','29584422','29578708','29547267','29643191','29654922','29654926','29644447','29660061','29644569','29652669','29636002','29636100','29597982','29692985','29692796','29692791','29692789','29671843','29642631','29633905','29648614','29635854','29635715','29636434','29633086','29648652','29637263','29637380','29642590','29622466','29622465','29622464','29622463','29576375','29686642','29686690','29642546','29689504','29632394','29112734','29630662','29633040','29629488','29629486','29629479','29629478','29629475','29633082','29629668','29665455','29627963','29642464','29655154','29635198','29633550','29625550','29624905','29633323','29681893','29630984','29642376','29624470','29626087','29508613','29626127','29626126','29633464','29624504','29627591','29694144','29694107','29624613','29622649','29614602','29659709','29625055','29625054','29625053','29625052','29625051','29625050','29625049','29625048','29567670','29438468','29626577','29675417','29459009','29355682','29627648','29335216','29216433','29058899','29621804','29627560','29547259','29618459','29655105','29626794','29626668','29626624','29618489','29618511','29626507','29617350','29617306','29619515','29617374','29618747','29417733','29617669','29617668','29617667','29617666','29617665','29617664','29617662','29617661','29617660','29617659','29617658','29552680','29553243','29514452','29505247','29621598']

    pmids = list()

    n = 0

    outio = open("/Users/forrest/Downloads/pubmed_result.json", 'w')

    starttime = datetime.datetime.now()

    firsttime = starttime

    with open("/Users/forrest/Downloads/pubmed_result.txt") as inio:

        for i in inio:

            pmids.append(i.rstrip())

            n += 1

            if n % 1000 == 0:

                records = get_ref_pmid(pmids)

                recordsjson = records_to_json(records)

                outio.write(recordsjson)

                pmids.clear()

                endtime = datetime.datetime.now()

                spendtime = endtime - starttime

                totalsptime = endtime - firsttime

                print(n, spendtime, "Total used:", totalsptime)

                starttime = datetime.datetime.now()

    outio.close()

    inio.close()